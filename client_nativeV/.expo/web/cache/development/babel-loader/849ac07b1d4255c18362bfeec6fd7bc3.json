{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"label\", \"icon\", \"isDate\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Formik } from 'formik';\nimport { StyledContainer, InnerContainer, PageLogo, PageTitle, SubTitle, StyledFormArea, LeftIcon, StyledInputLabel, StyledTextInput, RightIcon, StyledButton, ButtonText, Colors, MsgBox, Line, ExtraView, ExtraText, TextLink, TextLinkContent } from \"./../components/styles\";\nimport { Octicons, Ionicons, Fontisto } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar brand = Colors.brand,\n    darkLight = Colors.darkLight,\n    primary = Colors.primary;\n\nvar MobVerify = function MobVerify() {\n  return _jsxs(StyledContainer, {\n    children: [_jsx(StatusBar, {\n      style: \"dark\"\n    }), _jsxs(InnerContainer, {\n      children: [_jsx(PageTitle, {\n        children: \"Mobile Verification\"\n      }), _jsx(SubTitle, {\n        children: \"Code is sent to \\\\MOBILE NO.\\\\\"\n      }), _jsx(Formik, {\n        initialValues: {\n          OTP: ''\n        },\n        onSubmit: function onSubmit(values) {\n          console.log(values);\n        },\n        children: function children(_ref) {\n          var handleChange = _ref.handleChange,\n              handleBlur = _ref.handleBlur,\n              handleSubmit = _ref.handleSubmit,\n              values = _ref.values;\n          return _jsxs(StyledFormArea, {\n            children: [_jsx(MyTextInput, {\n              label: \"Enter OTP\",\n              icon: \"key\",\n              placeholder: \"Enter your 6 digit OTP\",\n              placeholderTextColor: '#777',\n              onChangeText: handleChange('OTP'),\n              onBlur: handleBlur('OTP'),\n              value: values.OTP,\n              keyboardType: \"phone-pad\"\n            }), _jsx(MsgBox, {\n              children: \"...\"\n            }), _jsx(StyledButton, {\n              onPress: handleSubmit,\n              children: _jsx(ButtonText, {\n                children: \"Verify and Create Account\"\n              })\n            }), _jsx(Line, {}), _jsxs(ExtraView, {\n              children: [_jsx(ExtraText, {\n                children: \"Didn't recieved code? \"\n              }), _jsx(TextLink, {\n                children: _jsx(TextLinkContent, {\n                  children: \"Request Again in 20 sec\"\n                })\n              })]\n            })]\n          });\n        }\n      })]\n    })]\n  });\n};\n\nvar MyTextInput = function MyTextInput(_ref2) {\n  var label = _ref2.label,\n      icon = _ref2.icon,\n      isDate = _ref2.isDate,\n      props = _objectWithoutProperties(_ref2, _excluded);\n\n  return _jsxs(View, {\n    children: [_jsx(LeftIcon, {\n      children: _jsx(Octicons, {\n        name: icon,\n        size: 30,\n        color: brand\n      })\n    }), _jsx(StyledInputLabel, {\n      children: label\n    }), !isDate && _jsx(StyledTextInput, _objectSpread({}, props))]\n  });\n};\n\nexport default MobVerify;","map":{"version":3,"sources":["C:/Users/Dell/Downloads/Native-login-SignUp-main/screens/MobVerify.js"],"names":["React","useState","StatusBar","Formik","StyledContainer","InnerContainer","PageLogo","PageTitle","SubTitle","StyledFormArea","LeftIcon","StyledInputLabel","StyledTextInput","RightIcon","StyledButton","ButtonText","Colors","MsgBox","Line","ExtraView","ExtraText","TextLink","TextLinkContent","Octicons","Ionicons","Fontisto","brand","darkLight","primary","MobVerify","OTP","values","console","log","handleChange","handleBlur","handleSubmit","MyTextInput","label","icon","isDate","props"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { StatusBar } from 'expo-status-bar';\r\n\r\nimport { View, TouchableOpacity } from 'react-native';\r\n\r\n// formik\r\nimport { Formik } from 'formik';\r\n\r\nimport {\r\n    StyledContainer,\r\n    InnerContainer,\r\n    PageLogo,\r\n    PageTitle,\r\n    SubTitle,\r\n    StyledFormArea,\r\n    LeftIcon,\r\n    StyledInputLabel,\r\n    StyledTextInput,\r\n    RightIcon,\r\n    StyledButton,\r\n    ButtonText,\r\n    Colors,\r\n    MsgBox,\r\n    Line,\r\n    ExtraView,\r\n    ExtraText,\r\n    TextLink,\r\n    TextLinkContent,\r\n} from './../components/styles';\r\n\r\n// icons\r\nimport { Octicons, Ionicons, Fontisto } from '@expo/vector-icons';\r\n\r\n// colors\r\nconst { brand, darkLight, primary } = Colors;\r\n\r\n\r\n\r\nconst MobVerify = () => {\r\n    // const [hidePassword, setHidePassword] = useState(true);\r\n    // const [show, setShow] = useState(false);\r\n    return (\r\n        <StyledContainer>\r\n            <StatusBar style=\"dark\" />\r\n            <InnerContainer>\r\n                <PageTitle>Mobile Verification</PageTitle>\r\n                <SubTitle>Code is sent to \\MOBILE NO.\\</SubTitle>\r\n\r\n                <Formik\r\n                    initialValues={{ OTP: '' }}\r\n                    onSubmit={(values) => {\r\n                        console.log(values);\r\n                    }}\r\n                >\r\n                    {({ handleChange, handleBlur, handleSubmit, values }) => (\r\n                        <StyledFormArea>\r\n                            <MyTextInput\r\n                                label=\"Enter OTP\"\r\n                                icon=\"key\"\r\n                                placeholder=\"Enter your 6 digit OTP\"\r\n                                placeholderTextColor={'#777'}\r\n                                onChangeText={handleChange('OTP')}\r\n                                onBlur={handleBlur('OTP')}\r\n                                value={values.OTP}\r\n                                keyboardType=\"phone-pad\"\r\n                            />\r\n\r\n\r\n                            <MsgBox>...</MsgBox>\r\n                            <StyledButton onPress={handleSubmit}>\r\n                                <ButtonText>Verify and Create Account</ButtonText>\r\n                            </StyledButton>\r\n                            <Line />\r\n                            <ExtraView>\r\n                                <ExtraText>Didn't recieved code? </ExtraText>\r\n                                <TextLink>\r\n                                    <TextLinkContent>Request Again in 20 sec</TextLinkContent>\r\n                                </TextLink>\r\n                            </ExtraView>\r\n                        </StyledFormArea>\r\n                    )}\r\n                </Formik>\r\n            </InnerContainer>\r\n        </StyledContainer>\r\n    );\r\n};\r\n\r\nconst MyTextInput = ({ label, icon, isDate, ...props }) => {\r\n    return (\r\n        <View>\r\n            <LeftIcon>\r\n                <Octicons name={icon} size={30} color={brand} />\r\n            </LeftIcon>\r\n            <StyledInputLabel>{label}</StyledInputLabel>\r\n            {!isDate && <StyledTextInput {...props} />}\r\n\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default MobVerify;\r\n"]},"metadata":{},"sourceType":"module"}