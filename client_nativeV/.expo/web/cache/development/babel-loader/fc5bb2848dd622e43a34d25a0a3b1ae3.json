{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _excluded = [\"label\", \"icon\", \"isPassword\", \"hidePassword\", \"setHidePassword\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport View from \"react-native-web/dist/exports/View\";\nimport { Formik } from 'formik';\nimport { StyledContainer, InnerContainer, PageLogo, PageTitle, SubTitle, StyledFormArea, LeftIcon, StyledInputLabel, StyledTextInput, RightIcon, StyledButton, ButtonText, Colors, MsgBox, Line, ExtraView, ExtraText, TextLink, TextLinkContent, WelcomeContainer, WelcomeImage, Avatar } from \"./../components/styles\";\nimport { Octicons, Ionicons, Fontisto } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar brand = Colors.brand,\n    darkLight = Colors.darkLight,\n    primary = Colors.primary;\n\nvar Welcome = function Welcome() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      hidePassword = _useState2[0],\n      setHidePassword = _useState2[1];\n\n  return _jsxs(_Fragment, {\n    children: [_jsx(StatusBar, {\n      style: \"dark\"\n    }), _jsxs(InnerContainer, {\n      children: [_jsx(WelcomeImage, {\n        resizeMode: \"contain\",\n        source: require(\"./../assets/img/img3.jpg\")\n      }), _jsxs(WelcomeContainer, {\n        children: [_jsx(PageTitle, {\n          welcome: true,\n          children: \"Home Page\"\n        }), _jsx(SubTitle, {\n          welcome: true,\n          children: \"User Name \"\n        }), _jsx(SubTitle, {\n          welcome: true,\n          children: \"user@email.id \"\n        }), _jsxs(StyledFormArea, {\n          children: [_jsx(Avatar, {\n            resizeMode: \"cover\",\n            source: require(\"./../assets/img/img2.jpg\")\n          }), _jsx(Line, {}), _jsx(StyledButton, {\n            onPress: function onPress() {},\n            children: _jsx(ButtonText, {\n              children: \"Log Out\"\n            })\n          })]\n        })]\n      })]\n    })]\n  });\n};\n\nvar MyTextInput = function MyTextInput(_ref) {\n  var label = _ref.label,\n      icon = _ref.icon,\n      isPassword = _ref.isPassword,\n      hidePassword = _ref.hidePassword,\n      setHidePassword = _ref.setHidePassword,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return _jsxs(View, {\n    children: [_jsx(LeftIcon, {\n      children: _jsx(Octicons, {\n        name: icon,\n        size: 30,\n        color: brand\n      })\n    }), _jsx(StyledInputLabel, {\n      children: label\n    }), _jsx(StyledTextInput, _objectSpread({}, props)), isPassword && _jsx(RightIcon, {\n      onPress: function onPress() {\n        setHidePassword(!hidePassword);\n      },\n      children: _jsx(Ionicons, {\n        name: hidePassword ? 'md-eye-off' : 'md-eye',\n        size: 30,\n        color: darkLight\n      })\n    })]\n  });\n};\n\nexport default Welcome;","map":{"version":3,"sources":["C:/Users/Dell/Downloads/Native-login-SignUp-main/screens/Welcome.js"],"names":["React","useState","StatusBar","Formik","StyledContainer","InnerContainer","PageLogo","PageTitle","SubTitle","StyledFormArea","LeftIcon","StyledInputLabel","StyledTextInput","RightIcon","StyledButton","ButtonText","Colors","MsgBox","Line","ExtraView","ExtraText","TextLink","TextLinkContent","WelcomeContainer","WelcomeImage","Avatar","Octicons","Ionicons","Fontisto","brand","darkLight","primary","Welcome","hidePassword","setHidePassword","require","MyTextInput","label","icon","isPassword","props"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,iBAA1B;;AAKA,SAASC,MAAT,QAAuB,QAAvB;AAEA,SACEC,eADF,EAEEC,cAFF,EAGEC,QAHF,EAIEC,SAJF,EAKEC,QALF,EAMEC,cANF,EAOEC,QAPF,EAQEC,gBARF,EASEC,eATF,EAUEC,SAVF,EAWEC,YAXF,EAYEC,UAZF,EAaEC,MAbF,EAcEC,MAdF,EAeEC,IAfF,EAgBEC,SAhBF,EAiBEC,SAjBF,EAkBEC,QAlBF,EAmBEC,eAnBF,EAoBEC,gBApBF,EAqBEC,YArBF,EAsBEC,MAtBF;AA0BA,SAASC,QAAT,EAAmBC,QAAnB,EAA6BC,QAA7B,QAA6C,oBAA7C;;;;AAGA,IAAQC,KAAR,GAAsCb,MAAtC,CAAQa,KAAR;AAAA,IAAeC,SAAf,GAAsCd,MAAtC,CAAec,SAAf;AAAA,IAA0BC,OAA1B,GAAsCf,MAAtC,CAA0Be,OAA1B;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB,kBAAwC/B,QAAQ,CAAC,IAAD,CAAhD;AAAA;AAAA,MAAOgC,YAAP;AAAA,MAAqBC,eAArB;;AAEA,SACE;AAAA,eACE,KAAC,SAAD;AAAW,MAAA,KAAK,EAAC;AAAjB,MADF,EAEE,MAAC,cAAD;AAAA,iBACE,KAAC,YAAD;AAAc,QAAA,UAAU,EAAC,SAAzB;AAAmC,QAAA,MAAM,EAAEC,OAAO;AAAlD,QADF,EAEE,MAAC,gBAAD;AAAA,mBACE,KAAC,SAAD;AAAW,UAAA,OAAO,EAAE,IAApB;AAAA;AAAA,UADF,EAEE,KAAC,QAAD;AAAU,UAAA,OAAO,EAAE,IAAnB;AAAA;AAAA,UAFF,EAGE,KAAC,QAAD;AAAU,UAAA,OAAO,EAAE,IAAnB;AAAA;AAAA,UAHF,EAKE,MAAC,cAAD;AAAA,qBACE,KAAC,MAAD;AAAQ,YAAA,UAAU,EAAC,OAAnB;AAA2B,YAAA,MAAM,EAAEA,OAAO;AAA1C,YADF,EAGE,KAAC,IAAD,KAHF,EAKE,KAAC,YAAD;AAAc,YAAA,OAAO,EAAE,mBAAM,CAAG,CAAhC;AAAA,sBACE,KAAC,UAAD;AAAA;AAAA;AADF,YALF;AAAA,UALF;AAAA,QAFF;AAAA,MAFF;AAAA,IADF;AAuBD,CA1BD;;AA4BA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAA0E;AAAA,MAAvEC,KAAuE,QAAvEA,KAAuE;AAAA,MAAhEC,IAAgE,QAAhEA,IAAgE;AAAA,MAA1DC,UAA0D,QAA1DA,UAA0D;AAAA,MAA9CN,YAA8C,QAA9CA,YAA8C;AAAA,MAAhCC,eAAgC,QAAhCA,eAAgC;AAAA,MAAZM,KAAY;;AAC5F,SACE,MAAC,IAAD;AAAA,eACE,KAAC,QAAD;AAAA,gBACE,KAAC,QAAD;AAAU,QAAA,IAAI,EAAEF,IAAhB;AAAsB,QAAA,IAAI,EAAE,EAA5B;AAAgC,QAAA,KAAK,EAAET;AAAvC;AADF,MADF,EAIE,KAAC,gBAAD;AAAA,gBAAmBQ;AAAnB,MAJF,EAKE,KAAC,eAAD,oBAAqBG,KAArB,EALF,EAMGD,UAAU,IACT,KAAC,SAAD;AACE,MAAA,OAAO,EAAE,mBAAM;AACbL,QAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AACD,OAHH;AAAA,gBAKE,KAAC,QAAD;AAAU,QAAA,IAAI,EAAEA,YAAY,GAAG,YAAH,GAAkB,QAA9C;AAAwD,QAAA,IAAI,EAAE,EAA9D;AAAkE,QAAA,KAAK,EAAEH;AAAzE;AALF,MAPJ;AAAA,IADF;AAkBD,CAnBD;;AAqBA,eAAeE,OAAf","sourcesContent":["import React, { useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\n\nimport { View } from 'react-native';\n\n// formik\nimport { Formik } from 'formik';\n\nimport {\n  StyledContainer,\n  InnerContainer,\n  PageLogo,\n  PageTitle,\n  SubTitle,\n  StyledFormArea,\n  LeftIcon,\n  StyledInputLabel,\n  StyledTextInput,\n  RightIcon,\n  StyledButton,\n  ButtonText,\n  Colors,\n  MsgBox,\n  Line,\n  ExtraView,\n  ExtraText,\n  TextLink,\n  TextLinkContent,\n  WelcomeContainer,\n  WelcomeImage,\n  Avatar,\n} from './../components/styles';\n\n// icons\nimport { Octicons, Ionicons, Fontisto } from '@expo/vector-icons';\n\n// colors\nconst { brand, darkLight, primary } = Colors;\n\nconst Welcome = () => {\n  const [hidePassword, setHidePassword] = useState(true);\n\n  return (\n    <>\n      <StatusBar style=\"dark\" />\n      <InnerContainer>\n        <WelcomeImage resizeMode=\"contain\" source={require('./../assets/img/img3.jpg')} />\n        <WelcomeContainer>\n          <PageTitle welcome={true}>Home Page</PageTitle>\n          <SubTitle welcome={true}>User Name </SubTitle>\n          <SubTitle welcome={true}>user@email.id </SubTitle>\n\n          <StyledFormArea>\n            <Avatar resizeMode=\"cover\" source={require('./../assets/img/img2.jpg')} />\n\n            <Line />\n\n            <StyledButton onPress={() => { }}>\n              <ButtonText>Log Out</ButtonText>\n            </StyledButton>\n          </StyledFormArea>\n        </WelcomeContainer>\n      </InnerContainer>\n    </>\n  );\n};\n\nconst MyTextInput = ({ label, icon, isPassword, hidePassword, setHidePassword, ...props }) => {\n  return (\n    <View>\n      <LeftIcon>\n        <Octicons name={icon} size={30} color={brand} />\n      </LeftIcon>\n      <StyledInputLabel>{label}</StyledInputLabel>\n      <StyledTextInput {...props} />\n      {isPassword && (\n        <RightIcon\n          onPress={() => {\n            setHidePassword(!hidePassword);\n          }}\n        >\n          <Ionicons name={hidePassword ? 'md-eye-off' : 'md-eye'} size={30} color={darkLight} />\n        </RightIcon>\n      )}\n    </View>\n  );\n};\n\nexport default Welcome;\n"]},"metadata":{},"sourceType":"module"}